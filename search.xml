<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo部署</title>
      <link href="/2019/12/10/Hexo%E9%83%A8%E7%BD%B2/"/>
      <url>/2019/12/10/Hexo%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<h3 id="个人博客"><a href="#个人博客" class="headerlink" title="个人博客"></a>个人博客</h3><blockquote><p>对于做技术的来讲，有一个自己的技术博客是很重要的，它不仅记录着自己的成长经历，同时也像别人展示了自己。在面试的时候也是属于加分项。</p></blockquote><h3 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h3><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p></blockquote><ul><li><p>安装依赖程序</p><blockquote><p>hexo需要几个依赖程序，分别是Node.js(<strong>版本需不低于 8.10，建议使用 Node.js 10.0 及以上版本</strong>)和git</p></blockquote><ul><li><p>git</p><pre><code class="bash">  # Linux (Ubuntu, Debian)  sudo apt-get install git-core  # Linux (Fedora, Red Hat, CentOS)  sudo yum install git-core  # Mac  brew install git</code></pre></li><li><p>Node.js</p><blockquote><p>对于中国大陆地区用户，可以前往 淘宝 Node.js 镜像 下载，<a href="https://npm.taobao.org/mirrors/node" target="_blank" rel="noopener">淘宝Node.js镜像</a><br><br>包管理工具安装方式参考地址<a href="https://nodejs.org/en/download/package-manager/" target="_blank" rel="noopener">包管理工具安装</a><br><br><a href="https://github.com/nodesource/distributions/blob/master/README.md" target="_blank" rel="noopener">NodeSource 安装</a></p></blockquote><ul><li><p>源码编译（去淘宝镜像下载，方便源码安装）</p><blockquote><p>后来我后悔了，编译了贼久(<strong>半个多小时</strong>)，所以以后都不会编了，直接基于后续做好的镜像创建容器了。<br><strong>ps：想自己构建镜像的朋友，可以直接选择包管理安装</strong><br><br>源码编译需要gcc或者clang(<strong>g++ 6.3.0 or clang++ 8.0.0</strong>)环境<br>需要git、wget、make、which、python环境工具(<strong>有些是编译脚本所需命令</strong>)</p></blockquote><ul><li><p>更新gcc</p><blockquote><p>由于原生的centos的gcc版本过低，node需要的最低都是6.3.0，所以我们在编译前提前更新gcc版本</p></blockquote><pre><code class="bash">  # 安装gcc6.3.1  yum -y install centos-release-scl  yum -y install devtoolset-6-gcc devtoolset-6-gcc-c++ devtoolset-6-binutils  scl enable devtoolset-6 bash  # 或者安装gcc8版本  yum install -y devtoolset-8-toolchain  scl enable devtoolset-8 bash</code></pre></li><li><p>源码编译node</p><blockquote><p>源代码去淘宝镜像下载，方便源码安装</p></blockquote><pre><code class="bash">  # 下载源码并解压  wget https://npm.taobao.org/mirrors/node/node-latest.tar.gz  mkdir /node  tar -xzvf node-latest.tar.gz -C /node --strip-components 1  # 如果没有make、which需要安装(有就跳过，一般都有，删减版的linux镜像容器没有)  yum install which make -y  # 编译  cd /node  ./configure  make &amp;&amp; make install  # 成功后查看npm（默认脚本添加了环境变量，如没有可自行ln）  [root@38cdaddc4e33 node]# npm --version  6.13.1  [root@38cdaddc4e33 node-v13.3.0]# which npm  /usr/local/bin/npm  [root@38cdaddc4e33 node-v13.3.0]# ll /usr/local/bin/npm  lrwxrwxrwx 1 root root 38 Dec 10 04:41 /usr/local/bin/npm -&gt; ../lib/node_modules/npm/bin/npm-cli.js</code></pre></li></ul></li><li><p>Linux包管理或终端命令安装</p><blockquote><p>NodeSource 安装</p></blockquote><ul><li><p>Linux (Fedora, Red Hat, CentOS)</p><pre><code class="bash">  curl -sL https://rpm.nodesource.com/setup_13.x | bash -</code></pre></li><li><p>Linux (Ubuntu, Debian)</p><pre><code class="bash">  # Using Ubuntu  curl -sL https://deb.nodesource.com/setup_13.x | sudo -E bash -  sudo apt-get install -y nodejs  # Using Debian, as root  curl -sL https://deb.nodesource.com/setup_13.x | bash -  apt-get install -y nodejs  # 或者包管理工具安装  sudo apt-get update  sudo apt-get install nodejs</code></pre></li><li><p>FreeBSD</p><pre><code class="bash">  pkg install node  cd /usr/ports/www/node &amp;&amp; make install</code></pre></li></ul></li><li><p>Mac</p><blockquote><p>使用 Homebrew 或 MacPorts 安装</p></blockquote><pre><code class="bash">  # bash命令安装  curl &quot;https://nodejs.org/dist/latest/node-${VERSION:-$(wget -qO- https://nodejs.org/dist/latest/ | sed -nE &#39;s|.*&gt;node-(.*)\.pkg&lt;/a&gt;.*|\1|p&#39;)}.pkg&quot; &gt; &quot;$HOME/Downloads/node-latest.pkg&quot; &amp;&amp; sudo installer -store -pkg &quot;$HOME/Downloads/node-latest.pkg&quot; -target &quot;/&quot;  # brew安装  brew install node</code></pre></li></ul></li></ul></li><li><p>安装Hexo</p><blockquote><p>依赖安装完就可以通过npm安装hexo了<br><br>hexo-cli负责创建 hexo工程，创建了工程之后，hexo-cli就全身而退了。<br>hexo 本身是一个静态博客生成工具，具备编译 Markdown、拼接主题模板、生成 HTML、上传 Git 或 FTP 等基本功能</p></blockquote><ul><li><p>npm命令介绍</p><pre><code class="node">  npm install --save-dev: 安装我们项目开发时的依赖，比如一些插件，对我们的less/sass/js/img进行一些处理，用于开发环境  npm install --save: 安装项目上线运行时的依赖，比如我们项目依赖的框架vue，插件jQuery等，用于生产环境  npm install -g: 全局安装，通常用于安装脚手架等工具  npm install: 不带参数，也会进行安装，但是安装的依赖不会被添加进项目的package.json中</code></pre></li><li><p>安装hexo和博客所需插件</p><pre><code class="bash">  # 安装hexo-cli(里面也同时会包括hexo)  npm install -g hexo-cli  # 对于只想要hexo的人，可以只局部安装hexo  npm install hexo  # 具备hexo工具后，创建仓库  hexo init blog  # 进入仓库（以下命令均是在仓库路径下进行，属于博客要用的通用插件）  # 安装自动部署发布工具插件  npm install hexo-deployer-git --save  # 安装订阅功能插件  npm install hexo-migrator-rss --save  # 安装可以上传本地图片的插件  npm install hexo-asset-image --save  # 安装文字计数插件  npm install hexo-wordcount --save  # 安装站点工具插件（让搜索引擎可以来抓取我们的文章，方便别人知道我们博客）  # Google  npm install hexo-generator-sitemap --save  # 百度  npm install hexo-generator-baidu-sitemap --save  # 如果想博客看板灵动一点，安装一个live2d看板娘  npm install hexo-helper-live2d --save  # 进入blog目录，安装一个主题  git clone https://github.com/TriDiamond/hexo-theme-obsidian.git themes/obsidian  # 替换默认主题landscape为obsidian  sed -i &quot;s/theme: landscape/theme: obsidian/g&quot; _config.yml  # unix下的sed和linux在-i模式下有点区别，前面得多一个参数  sed -i &quot;&quot; &quot;s/theme: landscape/theme: obsidian/g&quot; _config.yml  # 启动（默认4000端口）  hexo server  # 指定端口  hexo server -p 8080</code></pre></li><li><p>hexo生成的仓库目录介绍</p><pre><code class="bash">  # 查看目录结构  [root@38cdaddc4e33 blog]# tree -L 1  .  |-- _config.yml  |-- node_modules  |-- package-lock.json  |-- package.json  |-- scaffolds  |-- source  `-- themes  4 directories, 3 files</code></pre><ul><li><p><strong>_config.yml</strong></p><blockquote><p>全局配置文件，网站的很多信息都在这里配置，诸如网站名称，副标题，描述，作者，语言，主题，部署等等参数</p></blockquote><pre><code class="bash">  # Site  title: 真的猛士，敢于直面惨淡的人生，敢于正视淋漓的鲜血。 # 标题  subtitle: 爱胖爱生活    # 子标题  description: Pocket个人博客 # 描述信息  keywords: Linux,Python,后台开发,运维,docker # 博客关键字  author: pocket  language: zh-CN # 语言  timezone: Asia/Shanghai # 时区  # 部署部分的设置  deploy:    - type: git      repository: git@github.com:pocket-live/blog.git  # 设置repository对应的链接      branch: master                                        # 设置提交到的分支      message: Site updated at {{ now("YYYY-MM-DD HH:mm:ss") }} # 设置我们提交的信息</code></pre></li><li><p><strong>package.json</strong></p><blockquote><p>hexo框架的参数和所依赖插件</p></blockquote></li><li><p><strong>scaffolds</strong></p><blockquote><p>scaffolds是“脚手架、骨架”的意思，当你新建一篇文章（hexo new ‘title’）的时候，hexo是根据这个目录下的文件进行构建的。基本不用关心。</p></blockquote></li><li><p><strong>source</strong></p><blockquote><p>这个目录很重要，新建的文章都是在保存在这个目录下的，这个目录下有_posts 。需要新建的博文都放在 _posts 目录下，_posts 目录下是一个个 markdown 文件。</p></blockquote></li><li><p><strong>themes</strong></p><blockquote><p>存放网站主题目录。hexo有非常好的主题拓展，支持的主题也很丰富。该目录下，每一个子目录就是一个主题。每个主题有自己的单独配置文件，多份主题切换使用的话，很多主题特有配置就应该在这个文件夹下的_config.yml配置。</p></blockquote></li></ul></li></ul></li></ul><h3 id="docker部署"><a href="#docker部署" class="headerlink" title="docker部署"></a>docker部署</h3><blockquote><p>因为容器方便部署和维护，所以我们采用容器部署。镜像构建我们采用源码编译生成(<strong>去淘宝镜像下载源码</strong>)。</p></blockquote><ul><li><p>编写Dockerfile</p><blockquote><p>基于以上分析和理解，我们编写Dockerfile文件构建hexo镜像,方便后续创建容器或者给那些喜欢偷懒寻方便的朋友们直接用（<strong>前提是提交到DockerHub上</strong>）</p></blockquote><pre><code class="Dockerfile">  # 我们基于官方给的centos基础镜像构建hexo  FROM centos:latest  LABEL hexo-server author=&quot;pocket&lt;1178699765@qq.com&gt;&quot; date=&quot;2019-12-10&quot;  LABEL desc=&quot;基于hexo的个人博客&quot;  # 编译和安装npm  RUN yum update -y \      &amp;&amp; yum install git-core make wget centos-release-scl devtoolset-6-gcc devtoolset-6-gcc-c++ devtoolset-6-binutils which -y \      &amp;&amp; scl enable devtoolset-6 bash \      &amp;&amp; wget https://npm.taobao.org/mirrors/node/node-latest.tar.gz \      &amp;&amp; mkdir /node \      &amp;&amp; tar -xzvf node-latest.tar.gz -C /node --strip-components 1 \      &amp;&amp; cd /node \      &amp;&amp; ./configure \      &amp;&amp; make \      &amp;&amp; make install  # 安装hexo所需  RUN npm install -g hexo-cli \      &amp;&amp; cd / \      &amp;&amp; hexo init blog \      &amp;&amp; npm install hexo-deployer-git --save \      &amp;&amp; npm install hexo-migrator-rss --save \      &amp;&amp; npm install hexo-asset-image --save \      &amp;&amp; npm install hexo-wordcount --save \      &amp;&amp; npm install hexo-generator-sitemap --save \      &amp;&amp; npm install hexo-generator-baidu-sitemap --save \      &amp;&amp; npm install hexo-helper-live2d --save \      &amp;&amp; npm audit fix  WORKDIR /blog  # 找一个心仪的主题替换默认主题landscape模板  RUN git clone https://github.com/TriDiamond/hexo-theme-obsidian.git themes/obsidian \      &amp;&amp; sed -i &quot;s/theme: landscape/theme: obsidian/g&quot; /blog/_config.yml  # hexo的默认启动端口  EXPOSE 4000  # 清理不需要文件  RUN rm -rf /node-latest.tar.gz</code></pre></li></ul><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ul><li><p>构建镜像</p><pre><code class="bash">  # 基于上面的Dockerfile构建镜像，pocket0228换成各自的DockerHub账号  docker build -t pocket_hexo:0.1 .  # 把构建的镜像提交到DockerHub上供大家使用  # 登录  docker login  # 打自己标签  docker tag pocket_hexo:0.1 pocket0228/hexo:latest  # 提交到DockerHub  docker push pocket0228/hexo:latest</code></pre></li><li><p>基于镜像创建容器</p><blockquote><p>到这一步，也可以用docker-compose来编排了</p></blockquote><pre><code class="bash">  # 基于镜像运行hexo容器,同时挂载博客目录（方便后续编写博客和更新）  docker run -d -it  -p 80:4000 -v /home/blog:/blog --name my_blog pocket0228/hexo:latest /bin/bash  # 对于本机没有装hexo的，可以在容器创建后把blog目录复制出来稍微修改一下配置,然后重新run一个新容器以作挂载  docker cp my_blog:/blog home/blog  # 本机有hexo，那就本机init一个仓库挂载，配置好所需主题等进行直接挂载启动  # 进入容器  docker exec -it my_blog bash  cd /blog  # 启动hexo服务  hexo -s  # 或者一步到位  docker exec  my_blog &quot;cd /blog &amp;&amp; hexo -s&quot;</code></pre><p>  <em>docker-compose编排</em></p><pre><code class="yaml">  version: &quot;3&quot;   services:     hexo_server:      image: pocket0228/hexo:latest      container_name: hexo      restart: always      volumes:        - $PWD:/blog      ports:         - &quot;4000:4000&quot;      working_dir: /blog      command: &quot;hexo server&quot;</code></pre></li><li><p>hexo简单使用</p><pre><code class="bash">  # 运行，相当于hexo server（服务启动后，后续更新文章都不需要重启）  hexo s  # 创建文章（如果标题没空格则可以省略引号），这一步会生成.md文件  hexo new &quot;Linux介绍&quot; # 相当于hexo new post &quot;Linux介绍&quot;  # 创建分类  hexo new page &quot;categories&quot;  # 创建草稿  hexo new draft myDraftBlog  # 清楚缓存  hexo clean  # 生成博客，相当于hexo generate  hexo g  # 部署到github，相当于hexo deploy（前提是配好了github仓库，且ssh key也添加了）  hexo d</code></pre></li></ul><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><blockquote><p>将博客项目放到GitHub上</p></blockquote><pre><code class="bash"># 添加ssh key# 提交cd /bloggit initgit add README.mdgit commit -m &quot;first commit&quot;git remote add origin git@github.com:pocket-live/blog.gitgit push -u origin master</code></pre>]]></content>
      
      
      <categories>
          
          <category> 服务部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
